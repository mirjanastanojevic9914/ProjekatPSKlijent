/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.doctor;

import form.patient.*;
import communication.CommunicationServer;
import controller.Controller;
import domain.Doctor;
import domain.DoctorType;
import domain.Patient;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import session.Session;

/**
 *
 * @author Mira
 */
public class FormAddDoctor extends javax.swing.JPanel {

    /**
     * Creates new form FormAddPatient
     */
    public FormAddDoctor() {
        initComponents();
        txtId.setEnabled(false);
        txtDateBirth.setEnabled(false);
        txtDateEmployment.setEnabled(false);
        fillCBDoctorType();
        
        Doctor d = (Doctor) Session.getInstance().get("d");
        if (d != null) {
            
            showDoctor(d);
            btnSave.setText("Edit");
            Session.getInstance().remove("d");
            JOptionPane.showMessageDialog(this, "Sistem found doctor");

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtSurname = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        txtDateBirth = new javax.swing.JTextField();
        calendarDateBirth = new com.toedter.calendar.JCalendar();
        jLabel6 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtDateEmployment = new javax.swing.JTextField();
        calendarDateEmployment = new com.toedter.calendar.JCalendar();
        jLabel8 = new javax.swing.JLabel();
        txtSalary = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cmbDoctorType = new javax.swing.JComboBox();
        txtMobileNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();

        jLabel1.setText("Id:");

        jLabel2.setText("Name:");

        jLabel3.setText("Surname:");

        jLabel4.setText("Gender:");

        jLabel5.setText("Date birth:");

        txtId.setText("automatically filled");
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        txtDateBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateBirthActionPerformed(evt);
            }
        });

        jLabel6.setText("Mobile number:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel7.setText("Date employment:");

        jLabel8.setText("Salary:");

        txtSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalaryActionPerformed(evt);
            }
        });

        jLabel9.setText("Doctor type:");

        cmbDoctorType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("Password:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtPassword))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel2))
                                            .addGap(21, 21, 21)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtDateBirth))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(calendarDateBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel6))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtDateEmployment, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(calendarDateEmployment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtSalary)
                                        .addComponent(cmbDoctorType, 0, 181, Short.MAX_VALUE)))))
                        .addGap(82, 82, 82))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtDateEmployment, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(calendarDateEmployment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDateBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbDoctorType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(60, 60, 60)
                        .addComponent(btnSave))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(calendarDateBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            doValidation();
            
            String name = txtName.getText().trim();
            String surname = txtSurname.getText().trim();
            String password = txtPassword.getText().trim();
            String gender = txtGender.getText().trim();
            Date dateBirth = calendarDateBirth.getDate();
            String mobileNumber = txtMobileNumber.getText().trim();
            Date dateEmployment = calendarDateEmployment.getDate();
            
            double salary;
                try{
                salary = Double.parseDouble(txtSalary.getText().trim());
                } catch(Exception ex){
                    JOptionPane.showMessageDialog(this, "Incorrect value for salary");
                    return;
                }
            
            
            DoctorType doctorType = (DoctorType) cmbDoctorType.getSelectedItem();
           


            String message;
            if (btnSave.getText().equals("Save")) {
                Doctor doctor = new Doctor(name, surname, password, gender, dateBirth, mobileNumber, dateEmployment, salary, doctorType );
                doValidationDoctor(doctor);
                message = Controller.getInstanca().saveDoctor(doctor);
            } else {
               
                int id = Integer.parseInt(txtId.getText().trim());
                
                
                Doctor doctor = new Doctor(id, name, surname, password, gender, dateBirth, mobileNumber, dateEmployment, salary, doctorType);
                doValidationDoctor(doctor);
                message =  Controller.getInstanca().updateDoctor(doctor);
            }
            btnSave.setEnabled(false);
            JOptionPane.showMessageDialog(this, message);
        } catch (Exception ex) {
            
            
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtDateBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateBirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateBirthActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalaryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private com.toedter.calendar.JCalendar calendarDateBirth;
    private com.toedter.calendar.JCalendar calendarDateEmployment;
    private javax.swing.JComboBox cmbDoctorType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtDateBirth;
    private javax.swing.JTextField txtDateEmployment;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMobileNumber;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtSalary;
    private javax.swing.JTextField txtSurname;
    // End of variables declaration//GEN-END:variables
   
    private void fillCBDoctorType() {
        cmbDoctorType.removeAllItems();
        ArrayList<DoctorType> doctorTypes;
        try {
            doctorTypes = Controller.getInstanca().getDoctorTypesForCB();
        } catch (Exception ex) {
//            Logger.getLogger(FStanar.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("forme.stanar.FUnosStanara - linija 429 - " + ex.getMessage());
//            JOptionPane.showMessageDialog(this, ex.getMessage());
            doctorTypes = new ArrayList<>();
        }
        for (DoctorType docType : doctorTypes) {
            cmbDoctorType.addItem(docType);
        }
    }

    private void doValidation() throws Exception{
        if (CommunicationServer.getInstanca().getSocket().isClosed()) {
            throw new Exception("Connection lost! Try again!");
        }
        if (txtName.getText().isEmpty() || txtSurname.getText().isEmpty() || txtPassword.getText().isEmpty()|| txtGender.getText().isEmpty() || txtMobileNumber.getText().isEmpty() || txtSalary.getText().isEmpty()) {
            throw new Exception("You must fill all fields");
        }
    }

    private void doValidationDoctor(Doctor doctor) throws Exception {
        if (doctor.getDateBirth().after(new Date())) {
            throw new Exception("'Date birth' can not be after now");
        }
         if (doctor.getDateEmployment().after(new Date())) {
            throw new Exception("'Date employment' can not be after now");
        }
       
        
    }

    
    
     private void showDoctor(Doctor d) {
        DateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
       
        try {
            Doctor doctor = Controller.getInstanca().getDoctor(d);
            
            txtId.setText(doctor.getId()+ "");
            txtName.setText(doctor.getName());
            txtSurname.setText(doctor.getSurname());
            txtPassword.setText(doctor.getPassword());
            txtGender.setText(doctor.getGender());
            txtDateBirth.setText(sdf.format(doctor.getDateBirth()));
            txtMobileNumber.setText(doctor.getMobileNumber());
            txtDateEmployment.setText(sdf.format(doctor.getDateEmployment()));
            txtSalary.setText(doctor.getSalary()+"");
            cmbDoctorType.setSelectedItem((DoctorType) doctor.getDoctorType());
           
           
        } catch (Exception ex) {
            txtId.setText(d.getId()+ "");
            txtName.setText(d.getName());
            txtSurname.setText(d.getSurname());
            txtPassword.setText(d.getPassword());
            txtGender.setText(d.getGender());
            txtDateBirth.setText(sdf.format(d.getDateBirth()));
            txtMobileNumber.setText(d.getMobileNumber());
            txtDateEmployment.setText(sdf.format(d.getDateEmployment()));
            txtSalary.setText(d.getSalary()+"");
            cmbDoctorType.setSelectedItem((DoctorType) d.getDoctorType());

           
        }
       
    }
}
