/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.patient;

import communication.CommunicationServer;
import controller.Controller;
import domain.Patient;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import session.Session;

/**
 *
 * @author Mira
 */
public class FormAddPatient extends javax.swing.JPanel {

    /**
     * Creates new form FormAddPatient
     */
    public FormAddPatient() {
        initComponents();
        txtId.setEnabled(false);
        txtDateBirth.setEnabled(false);
        
        Patient p = (Patient) Session.getInstance().get("p");
        if (p != null) {
            showPatient(p);
            btnSave.setText("Edit");
            Session.getInstance().remove("p");
            JOptionPane.showMessageDialog(this, "Sistem found the patient");

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtSurname = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        txtDateBirth = new javax.swing.JTextField();
        calendarDateBirth = new com.toedter.calendar.JCalendar();
        jLabel6 = new javax.swing.JLabel();
        txtMobileNumber = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        jLabel1.setText("Id:");

        jLabel2.setText("Name:");

        jLabel3.setText("Surname:");

        jLabel4.setText("Gender:");

        jLabel5.setText("Date birth:");

        jLabel6.setText("Mobile number:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calendarDateBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtId)
                                .addComponent(txtName)
                                .addComponent(txtSurname)
                                .addComponent(txtGender)
                                .addComponent(txtDateBirth, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnSave)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDateBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(calendarDateBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnSave)
                .addContainerGap(29, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            doValidation();
            
            String name = txtName.getText().trim();
            String surname = txtSurname.getText().trim();
            String gender = txtGender.getText().trim();
            Date dateBirth = calendarDateBirth.getDate();
            String mobileNumber = txtMobileNumber.getText().trim();
           

            //Patient patient = new Patient(name, surname, gender, dateBirth, mobileNumber);
            //doValidationPatient(patient);

            String message;
            if (btnSave.getText().equals("Save")) {
                Patient patient = new Patient(name, surname, gender, dateBirth, mobileNumber);
                doValidationPatient(patient);
                message = Controller.getInstanca().savePatient(patient);
            } else {
                int id = Integer.parseInt(txtId.getText().trim());
                Patient patient = new Patient(id, name, surname, gender, dateBirth, mobileNumber);
                doValidationPatient(patient);
                message =  Controller.getInstanca().updatePatient(patient);
            }
            btnSave.setEnabled(false);
            JOptionPane.showMessageDialog(this, message);
        } catch (Exception ex) {
            
            
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private com.toedter.calendar.JCalendar calendarDateBirth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtDateBirth;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMobileNumber;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSurname;
    // End of variables declaration//GEN-END:variables
    

    private void doValidation() throws Exception{
        if (CommunicationServer.getInstanca().getSocket().isClosed()) {
            throw new Exception("Connection lost! Try again!");
        }
        if (txtName.getText().isEmpty() || txtSurname.getText().isEmpty() || txtGender.getText().isEmpty() || txtMobileNumber.getText().isEmpty()) {
            throw new Exception("You must fill all fields");
        }
    }

    private void doValidationPatient(Patient patient) throws Exception {
        if (patient.getDateBirth().after(new Date())) {
            throw new Exception("'Date birth' can not be after now");
        }
       
        
    }

    
    
     private void showPatient(Patient p) {
        DateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
       
        try {
            Patient patient = Controller.getInstanca().getPatient(p);
            
            txtId.setText(patient.getId()+ "");
            txtName.setText(patient.getName());
            txtSurname.setText(patient.getSurname());
            txtGender.setText(patient.getGender());
            txtDateBirth.setText(sdf.format(patient.getDateBirth()));
            txtMobileNumber.setText(patient.getMobileNumber());
           
           
        } catch (Exception ex) {
            txtId.setText(p.getId()+ "");
            txtName.setText(p.getName());
            txtSurname.setText(p.getSurname());
            txtGender.setText(p.getGender());
            txtDateBirth.setText(sdf.format(p.getDateBirth()));
            txtMobileNumber.setText(p.getMobileNumber());
           
        }
       
    }
}
